from tkinter.ttk import *
from tkinter import*
from tkinter import ttk
from dados import *
from tkinter import messagebox

# cores
cor0 = "#000000" # preto
cor1 = "#D3D3D3" # cinza
cor2 = "#ffffff" # branco
cor3 = "#CC0000" # vermelho
cor4 = "#403d3d" # letra
cor5 = "#009900" # verde

# janela
janela = Tk()
janela.title("iljhnfbownqçlkfn")
janela.geometry('500x450')
janela.configure(background=cor1)
janela.resizable(width=False, height=False)

style = Style(janela)
style.theme_use("clam")

# FRAMES
Frame_cima = Frame(janela, width=500, height=50, bg=cor3, relief="flat")
Frame_cima.grid(row=0, column=0, pady=1, padx=0, sticky=NSEW)

Frame_baixo = Frame(janela, width=500, height=200, bg=cor1, relief="flat")
Frame_baixo.grid(row=1, column=0, pady=1, padx=0, sticky=NSEW)

Frame_tabela = Frame(janela, width=500, height=100, bg=cor2, relief="flat")
Frame_tabela.grid(row=2, column=0, pady=1, padx=0, sticky=NW)

# configurando Frame_cima
l_nome = Label(Frame_cima, text='Agenda Telefônica', anchor=NE, font='tahoma 20 bold', bg=cor3, fg=cor1)
l_nome.place(x=5, y=5)
l_linha = Label(Frame_cima, text='', width=500, anchor=NE, font='tahoma 1', bg=cor0, fg=cor1)
l_linha.place(x=0, y=45)

# Configuração Frame_tabela
global tabela

def mostrar_dados():
    global tabela

    cabecalho = ['Nome', 'email', 'telefone', 'endereço']
    dados = ver_dados()

    tabela = ttk.Treeview(Frame_tabela, selectmode="extended", columns=cabecalho, show="headings")
    # barras de rolagem vertical e horizontal
    vsb = ttk.Scrollbar(Frame_tabela, orient="vertical", command=tabela.yview)
    hsb = ttk.Scrollbar(Frame_tabela, orient="horizontal", command=tabela.xview)

    tabela.grid(column=0,row=0, sticky='nsew')
    vsb.grid(column=1, row=0, sticky='ns')
    hsb.grid(column=0, row=1, sticky='ew')

    #Cabeçalho
    tabela.heading(0, text='Nome', anchor=NW)
    tabela.heading(1, text='E-mail', anchor=NW)
    tabela.heading(2, text='Telefone', anchor=NW)
    tabela.heading(3, text='Endereço', anchor=NW)
    #corpo
    tabela.column(0, width=150, anchor='nw')
    tabela.column(1, width=150, anchor='nw')
    tabela.column(2, width=80, anchor='nw')
    tabela.column(3, width=150, anchor='nw')

    for item in dados:
        tabela.insert('', 'end', values=item)

def  inserir():
    nome = e_nome.get()
    email = e_email.get()
    telefone = e_tel.get()
    endereco = e_ende.get()

    dados = [nome, email, telefone, email]

    if nome == '' or email == '' or telefone == '' or endereco == '':
        messagebox.showwarning('Dados', 'Por favor todos os campos!')
    else:
        adicionar_dados(dados)
        messagebox.showinfo('Dados', 'Dados adicionados!')

        e_nome.delete(0, 'end')
        e_email.delete(0, 'end')
        e_tel.delete(0, 'end')
        e_ende(0, 'end')

        mostrar_dados()

def atualizar():
    try:
        tab_dad = tabela.focus()
        tab_dicionario = tabela.item(tab_dad)
        tab_lista = tab_dicionario['values']

        nome = tab_lista[0]
        email = tab_lista[1]
        telefone = str(tab_lista[2])
        endereco = tab_lista[3]

        e_nome.insert(0, nome)
        e_email.insert(0, email)
        e_tel.insert(0, telefone)
        e_ende.insert(0, endereco)

        def confirmar():

            nome = e_nome.get()
            email = e_email.get()
            tel_novo = e_tel.get()
            endereco = e_ende.get()

            dados = [telefone, nome, email, tel_novo, endereco]

            print(dados)

            atualizar_dados(dados)

            messagebox.showinfo('Dados', 'Dados atualizados.')

            e_nome.delete(0, 'end')
            e_email.delete(0, 'end')
            e_tel.delete(0, 'end')
            e_ende(0, 'end')

            for widget in Frame_tabela.winfo_children():
                widget.destroy()

            b_confirmar.destroy()

            mostrar_dados()

        b_confirmar = Button(Frame_baixo, command=confirmar, width=10, text='Confirmar', font=('ivy 9 bold'), bg=cor5, fg=cor1,
                     relief=RAISED, overrelief=RIDGE)
        b_confirmar.place(x=375, y=80)

    except:
        messagebox.showwarning('Dados', 'Selecione uma informação na tabela.')


def remover():
    try:
        treev_dados = tabela.focus()
        treev_dicionario = tabela.item(treev_dados)
        treev_lista = treev_dicionario['values']
        valor = str(treev_lista[2])

        remover(valor)

        messagebox.showinfo('Sucesso', 'Os dados foram deletados com sucesso')

        for widget in Frame_tabela.winfo_children():
            widget.destroy()

        mostrar_dados()

    except IndexError:
        messagebox.showerror('Erro', 'Seleciona um dos dados na tabela')




# configurando Frame_baixo

l_nome = Label(Frame_baixo, text='Nome Completo*:', anchor=NW, font='ivy 10 bold', bg=cor1, fg=cor4)
l_nome.place(x=10, y=20)
e_nome = Entry(Frame_baixo, width=25, justify='left', font=('', 10), highlightthickness=1)
e_nome.place(x=130, y=20)

l_email = Label(Frame_baixo, text='E-mail:', anchor=NW, font='ivy 10 bold', bg=cor1, fg=cor4)
l_email.place(x=10, y=50)
e_email = Entry(Frame_baixo, width=25, justify='left', font=('', 10), highlightthickness=1)
e_email.place(x=130, y=50)

l_tel = Label(Frame_baixo, text='Telefone:', anchor=NW, font=('ivy 10 bold'), bg=cor1, fg=cor4)
l_tel.place(x=10, y=80)
e_tel = Entry(Frame_baixo, width=25, justify='left', relief=FLAT, font=('', 10), highlightthickness=1)
e_tel.place(x=130, y=80)

l_ende = Label(Frame_baixo, text='Endereço:', anchor=NW, font=('ivy 10 bold'), bg=cor1, fg=cor4)
l_ende.place(x=10, y=110)
e_ende = Entry(Frame_baixo, width=25, justify='left', relief=FLAT, font=('', 10), highlightthickness=1)
e_ende.place(x=130, y=110)

# Botão Procurar
b_procur = Button(Frame_baixo, text='PROCURAR', font=('ivy 8 bold'), bg=cor1, fg=cor4, relief=RAISED, overrelief=RIDGE)
b_procur.place(x=380, y=20)
e_procur = Entry(Frame_baixo, width=18, justify='left', font=('', 11), highlightthickness=1)
e_procur.place(x=340, y=50)

# Botão Ver Dados
b_dados = Button(Frame_baixo, command=mostrar_dados, text='Ver Dados', font=('ivy 8 bold'), bg=cor1, fg=cor4, relief=RAISED, overrelief=RIDGE)
b_dados.place(x=130, y=160)

# Botão Adicionar
b_dados = Button(Frame_baixo, command=inserir, width=10, text='Adicionar', font=('ivy 9 bold'), bg=cor5, fg=cor1, relief=RAISED, overrelief=RIDGE)
b_dados.place(x=375, y=80)

# Botão ATualizar
b_dados = Button(Frame_baixo, command=atualizar, width=10, text='Atualizar', font=('ivy 9 bold'), bg=cor1, fg=cor4, relief=RAISED, overrelief=RIDGE)
b_dados.place(x=375, y=115)

# Botão Deletar
b_dados = Button(Frame_baixo, width=10, text='Deletar', font=('ivy 9 bold'), bg=cor3, fg=cor1, relief=RAISED, overrelief=RIDGE)
b_dados.place(x=375, y=150)


mostrar_dados()

janela.mainloop()
